---
  name: onlinebook workflow 
  on:
    workflow_dispatch: null
    push:
      branches:
        # - main
        - dev
#   env:
#     MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
#     MONGO_USERNAME: superuser
#     MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  jobs:
    unit-testing:
      name: Unit Testing
      runs-on: ubuntu-latest
      container: node:18
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'


        - name: Install Dependencies
          run: npm install

        # - name: Unit Testing
        #   run: npm test

        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      needs: unit-testing
      name: code-coverage
      runs-on: ubuntu-latest
      container: node:18
      steps:
        - name: checkout repo
          uses: actions/checkout@v4.2.2

        - name: install nodejs dependencies
          run: npm install

        - name: code-coverage
          run: npm run coverage
          continue-on-error: true

        - name: Upload artifacts
          uses: actions/upload-artifact@v4.6.2
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      needs: code-coverage
      name: docker build
      runs-on: ubuntu-latest
      steps:
        - name: checkout repo
          uses: actions/checkout@v4.2.2

        - name: DockerLogin
          uses: docker/login-action@v3.4.0
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push Docker images
          uses: docker/build-push-action@v6.18.0
          with:
            push: true
            tags: soewailin/onlinebook:v5
            context: .
    # dev-deploy:
    #   name: dev-deployment
    #   runs-on: ubuntu-latest
    #   needs: docker
    #   environment: 
    #     name: development
    #   steps:
    #     - name: checkout 
    #       uses: actions/checkout@v4.2.2

    #     - name: setup kubectl
    #       uses: azure/setup-kubectl@v4
    #       with:
    #         version: 'v1.28.1'

    #     - name: K8s set context action
    #       uses: azure/k8s-set-context@v4
    #       with:
    #         kubeconfig: '${{ secrets.KUBECONFIG }}'


    #     - name: fetch nginx ingress IP
    #       run: > 
    #         echo "INGRESS_IP=$(kubectl -n ingress-nginx get services
    #         ingress-nginx-controller -o
    #         jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

    #     - name: replace token
    #       uses: cschleiden/replace-tokens@v1
    #       with:
    #           tokenPrefix: '_{_'
    #           tokenSuffix: '_}_'
    #           files: '["kubernetes/development/*.yaml"]'
    #       env:
    #         NAMESPACE: '${{ vars.NAMESPACE }}'
    #         REPLICAS: '${{ vars.REPLICAS }}'
    #         IMAGE: >
    #           ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha}}
    #         INGRESS_IP: '${{ env.INGRESS_IP }}'

    #     - run: cat kubernetes/development/*.yaml